@import url("https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;500;700&display=swap");
@import "typography.css";

:root {
    --color-primary: #002AFF;
    --color-secondary: #fff0ad;
    --color-background: #080808;
    --perspective: 2;
}

* {
    margin: 0;
    padding: 0;
}

body, html {
    overflow: hidden;
}

body {
    height: 100%;
    background-color: var(--color-background);
}

ul {
    list-style-type: none;
    height: 32px;
}

a {
    text-decoration: none;
    color: #FFFFFF;
}

li > * {
    display: inline-block;
    vertical-align: middle;
}

/* region Parallax */

.parallax {
    overflow-x: hidden;
    overflow-y: auto;
    height: 100vh;
    -webkit-perspective: calc(var(--perspective) * 1px);
    perspective: calc(var(--perspective) * 1px);
}

.parallax__group {
    position: relative;
    overflow: hidden;
    -webkit-transform-style: preserve-3d;
    transform-style: preserve-3d;
}

.parallax__layer {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

.parallax__layer--fore {
    z-index: 1;
    -webkit-transform: translateZ(90px) scale(.7);
    transform: translateZ(90px) scale(.7);
}

.parallax__layer--base {
    z-index: 4;
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
}

.parallax__layer--back {
    z-index: 3;
    -webkit-transform: translateZ(calc(var(--depth) * 1px)) scale(var(--scale));
    transform: translateZ(calc(var(--depth) * 1px)) scale(var(--scale));
    --depth: -2; /* default value for depth, must be kept unit-less */
    --scale: calc(((var(--perspective) - var(--depth)) / var(--perspective))); /* formula to compute scaling w.r.t. teh depth*/
}

.parallax__layer--deep {
    z-index: 2;
    -webkit-transform: translateZ(-600px) scale(3);
    transform: translateZ(-600px) scale(3);
}

/* endregion*/

/* region Parallax text styling */

.parallax__text {
    font-size: 200px;
    font-weight: bold;
    font-style: normal;
    fill: none;
    stroke-linecap: butt;
    stroke-width: 2px;
}

.parallax__text--light {
    stroke: rgba(255, 255, 255, 0.06);
}

.parallax__text--dark {
    stroke: rgba(0, 0, 0, 0.06);
}

.parallax__layer--back > svg {
    position: absolute;
    top: 50%;
    width: 100%;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
}

/* endregion */

/* region Parallax groups */

#splash.parallax__group {
    z-index: 4;
    height: 100vh;
}

#splash > .parallax__layer--base {
}

#splash > .parallax__layer--back {
    background: var(--color-background);
}

#about.parallax__group {
    z-index: 3;
    padding-bottom: 48%;
}

#about > .parallax__layer--base {
    padding: 64px;
    color: var(--color-background);
}

#about > .parallax__layer--back {
    height: 100vh;
    background: var(--color-secondary);
    --depth: -4;
}

#contacts.parallax__group {
    z-index: 4;
    padding-bottom: 24%;
}

#contacts > .parallax__layer--base {
    padding: 64px;
    color: white;
}

#contacts > .parallax__layer--back {
    height: 100vh;
    background: var(--color-primary);
}

/* endregion */

/* region Parallax debug */

.debug {
    position: fixed;
    z-index: 999;
    top: 0;
    left: .5em;
    padding: .5em;
    color: #fff;
    border-radius: 0 0 5px 5px;
    background: rgba(0, 0, 0, .85);
}

.debug-on .parallax__group {
    -webkit-transform: translate3d(0px, 0, -4px) rotateY(0.2deg);
    transform: translate3d(0px, 0, -4px) rotateY(0.2deg);
}

.debug-on .parallax__layer {
    opacity: 0.9;
    box-shadow: 0 0 0 2px #000;
}

.parallax__group {
    -webkit-transition: -webkit-transform 0.4s;
    transition: transform 0.4s;
}

/* endregion */

/* region Container */

#container {
    display: grid;
    height: 100vh;
    grid-auto-columns: 10% 20% auto 10%;
    grid-auto-rows: 10% minmax(64px, max-content) minmax(64px, max-content) auto;
    grid-template-areas:
            "header header header padding-right-1"
            "padding-left sidebar title-1 padding-right-1"
            "padding-left sidebar title-2 padding-right-2"
            "padding-left sidebar-bottom info info";
}

#container > #header {
    grid-area: header;
}

#container > #padding-left {
    grid-area: padding-left;
}

#container > #sidebar {
    grid-area: sidebar;
}

#container > #title-1 {
    grid-area: title-1;
}

#container > #title-2 {
    grid-area: title-2;
}

#container > #info {
    grid-area: info;
}

#container > #padding-right-1 {
    grid-area: padding-right-1;
}

#container > #padding-right-2 {
    grid-area: padding-right-2;
}

/* endregion */

/* region Header */

.navbar {
    overflow: auto;
    margin: 0 auto;
    padding-right: 40px;
}

.navbar ul {
    display: flex;
}

.navbar a {
    margin: 0 16px 0 16px;
    color: #FFFFFF;
}

.navbar a:hover {
    border-bottom: 2px #FFFFFF solid;
}

.flex {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    height: 100%;
}

.navbar .flex {
    justify-content: space-between;
}

/* endregion */

/* region Padding left lines */

#sidebar::before, #info::after {
    position: absolute;
    z-index: 3;
    top: 0;
    display: block;
    width: 2px;
    height: 100vh;
    content: "";
    transform: translateX(-50%);
    background-image: linear-gradient(transparent 33%, var(--color-primary) 0%);
    background-repeat: repeat-y;
    background-position: right;
    background-size: 20px 20px;
}

/* endregion */

/* region Avatar */

.avatar {
    position: relative;
    z-index: 2;
    top: 100%;
    left: 0;
    display: flex;
    overflow: hidden;
    align-items: center;
    justify-content: center;
    width: 80%;
    transform: translateY(-100%);
    vertical-align: bottom;
}

.avatar img {
    flex-shrink: 0;
    width: 100%;
    min-width: 100%;
    height: 100%;
    min-height: 100%
}

/* endregion */

/* region Title */

.title {
    position: relative;
    padding-bottom: 16%;
}

.title > svg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.title-text {
    font-weight: bold;
    font-style: normal;
    fill: #FFFFFF;
}

/* endregion */

#sidebar > div {
    float: left;
}

/* region Title baseline lines */

#padding-right-1::after, #padding-right-2::after {
    position: absolute;
    z-index: -1;
    left: 0;
    display: block;
    width: 100%;
    height: 2px;
    content: '';
    background-color: var(--color-secondary);
}

/* endregion */

.box {
    position: relative;
    top: 50%;
    left: 50%;
    transform: translateX(-50%) translateY(-50%);
}

/* region Lines */

.line.horizontal {
    width: 100%;
    height: 2px;
    background-color: var(--color-primary);
}

.line.vertical {
    width: 2px;
    height: 100%;
    background-color: var(--color-secondary);
}

.line.baseline {
    position: absolute;
    left: 0;
    width: 100%;
    height: 2px;
    transform: translateY(-50%);
    background-color: var(--color-secondary);
}

.mark {
    z-index: 2;
}

.line.horizontal > .mark {
    width: 2px;
    height: 40px;
}

.line.vertical > .mark {
    width: 40px;
    height: 2px;
}

.line.horizontal > .mark.left {
    float: left;
    transform: translateX(-50%) translateY(-50%);
    background-color: var(--color-primary);
}

.line.horizontal > .mark.right {
    float: right;
    transform: translateX(50%) translateY(-50%);
    background-color: var(--color-primary);
}

.line.vertical > .mark.left {
    position: relative;
    top: 0;
    transform: translateX(-50%);
    background-image: linear-gradient(to right, transparent 33%, var(--color-secondary) 0%);
    background-repeat: repeat-x;
    background-position: right;
    background-size: 8px 8px;
}

.line.vertical > .mark.right {
    position: relative;
    top: 100%;
    transform: translateX(-50%) translateY(-200%);
    background-image: linear-gradient(to right, transparent 33%, var(--color-secondary) 0%);
    background-repeat: repeat-x;
    background-position: right;
    background-size: 8px 8px;
}

.line.horizontal > .label {
    position: relative;
    z-index: 1;
    left: 50%;
    float: left;
    width: fit-content;
    padding: 2px;
    transform: translateX(-50%) translateY(-50%);
    color: #FFFFFF;
    background-color: var(--color-primary);
}

.line.vertical > .label {
    position: relative;
    z-index: 1;
    top: 50%;
    float: left;
    width: fit-content;
    padding: 2px;
    transform: translateX(-50%) translateY(-50%);
    color: var(--color-background);
    background-color: var(--color-secondary);
}

/* endregion */
